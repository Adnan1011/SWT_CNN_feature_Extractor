name: "HC_Feats_CLS"

input: "raw_features"
input_dim: 1  # batch size to be changed on fly
input_dim: 1
input_dim: 96
input_dim: 96

input: "labels"
input_dim: 1  # batch size to be changed on fly
input_dim: 1
input_dim: 1
input_dim: 1

layer {
   bottom: "labels"
   top: "labels_reshape"
   name: "labels_reshape"
   type: "Reshape"
   reshape_param{
	   shape {
			dim: -1 
			dim: 1
			dim: 1 
			dim: 1
		}
	}
}

# --------- convolution part ---------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "raw_features"
  top: "conv1"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 80
    kernel_size: 5
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "conv1"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2		
		pool: MAX
	}
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 20
    kernel_size: 3
    stride: 1
    weight_filler { type: "xavier" }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "conv2"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2		
		pool: MAX
	}
}

# --------- Fully connected part ---------

layer {
	bottom: "pool2"
	top: "fc1"
	name: "fc1"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "InnerProduct"
	inner_product_param {
		num_output: 768
		weight_filler {
			type: "xavier"		 
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
	
}

layer {	
	name: "relu3"
	type: "ReLU"
	bottom: "fc1"
	top: "fc1"
}

layer {
	bottom: "fc1"
	top: "fc1"
	name: "drop1"
	type: "Dropout"
	dropout_param {
		dropout_ratio: 0.5
		scale_train: false
	}
}

layer {
	bottom: "fc1"
	top: "class_score"
	name: "class_score"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	type: "InnerProduct"
	inner_product_param {
		num_output: 11
		weight_filler {
			type: "xavier"		 
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}	
}

# --------- calculate loss ---------

layer {
  name: "softmax_loss"
  type: "SoftmaxWithLoss"
  bottom: "class_score"
  bottom: "labels_reshape"
  top: "softmax_loss"
  loss_weight: 1
}

layer {
  name: "class_prob"
  type: "Softmax"
  bottom: "class_score"
  top: "class_prob"
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "class_prob"
  bottom: "labels_reshape"
  top: "accuracy"  
}
